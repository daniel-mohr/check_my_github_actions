name: test_some_github_actions

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    # run on every month on day 6 at 23:42
    - cron: '42 23 6 * *'

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      # https://github.com/marketplace/actions/checkout
    - uses: actions/setup-python@v4
      # https://github.com/marketplace/actions/setup-python
    - uses: pre-commit/action@v3.0.0
      # https://github.com/pre-commit/action
      #continue-on-error: true
  amd64_opensuse_leap_152:
    # https://github.com/daniel-mohr/amd64_opensuse_leap_15.2
    runs-on: ubuntu-latest
    name: opensuse leap 15.2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: create test script for docker
        run: |
          echo "#!/bin/sh -l" > do_test
          echo "set -e -x" >> do_test
          echo "zypper --non-interactive install dpkg lsb-release python3" >> do_test
          echo "uname -a" >> do_test
          echo "dpkg --print-architecture" >> do_test
          echo "lsb_release -a" >> do_test
          echo "lscpu" >> do_test
          echo "env python3 -V" >> do_test
          chmod +x do_test
      - name: run my script in docker image
        uses: daniel-mohr/amd64_opensuse_leap_15.2@v0
        with:
          cmdfile: ./do_test

  amd64_opensuse_leap_153:
    # https://github.com/daniel-mohr/amd64_opensuse_leap_15.3
    runs-on: ubuntu-latest
    name: opensuse leap 15.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: create test script for docker
        run: |
          echo "#!/bin/sh -l" > do_test
          echo "set -e -x" >> do_test
          echo "zypper --non-interactive install dpkg lsb-release python3" >> do_test
          echo "uname -a" >> do_test
          echo "dpkg --print-architecture" >> do_test
          echo "lsb_release -a" >> do_test
          echo "lscpu" >> do_test
          echo "env python3 -V" >> do_test
          chmod +x do_test
      - name: run my script in docker image
        uses: daniel-mohr/amd64_opensuse_leap_15.3@v0
        with:
          cmdfile: ./do_test

  amd64_opensuse_leap_154:
    # https://github.com/daniel-mohr/amd64_opensuse_leap_15.4
    runs-on: ubuntu-latest
    name: opensuse leap 15.4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: create test script for docker
        run: |
          echo "#!/bin/sh -l" > do_test
          echo "set -e -x" >> do_test
          echo "zypper --non-interactive install dpkg lsb-release python3" >> do_test
          echo "uname -a" >> do_test
          echo "dpkg --print-architecture" >> do_test
          echo "lsb_release -a" >> do_test
          echo "lscpu" >> do_test
          echo "env python3 -V" >> do_test
          chmod +x do_test
      - name: run my script in docker image
        uses: daniel-mohr/amd64_opensuse_leap_15.4@v0
        with:
          cmdfile: ./do_test

  amd64_opensuse_leap_155:
    # https://github.com/daniel-mohr/amd64_opensuse_leap_15.5
    runs-on: ubuntu-latest
    name: opensuse leap 15.5
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: create test script for docker
        run: |
          echo "#!/bin/sh -l" > do_test
          echo "set -e -x" >> do_test
          echo "zypper --non-interactive install dpkg lsb-release python3" >> do_test
          echo "uname -a" >> do_test
          echo "dpkg --print-architecture" >> do_test
          echo "lsb_release -a" >> do_test
          echo "lscpu" >> do_test
          echo "env python3 -V" >> do_test
          chmod +x do_test
      - name: run my script in docker image
        uses: daniel-mohr/amd64_opensuse_leap_15.5@latest
        with:
          cmdfile: ./do_test

  amd64_opensuse_leap_latest:
    # https://github.com/daniel-mohr/amd64_opensuse_leap_latest
    runs-on: ubuntu-latest
    name: opensuse leap latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: create test script for docker
        run: |
          echo "#!/bin/sh -l" > do_test
          echo "set -e -x" >> do_test
          echo "zypper --non-interactive install dpkg lsb-release python3" >> do_test
          echo "uname -a" >> do_test
          echo "dpkg --print-architecture" >> do_test
          echo "lsb_release -a" >> do_test
          echo "lscpu" >> do_test
          echo "env python3 -V" >> do_test
          chmod +x do_test
      - name: run my script in docker image
        uses: daniel-mohr/amd64_opensuse_leap_latest@v0
        with:
          cmdfile: ./do_test

  i386_debian_latest_listing:
    # https://github.com/daniel-mohr/i386_debian_latest
    runs-on: ubuntu-latest
    name: debian latest (32 bit)
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: create test script for docker
        run: |
          echo "#!/bin/sh -l" > do_test
          echo "set -e -x" >> do_test
          echo "DEBIAN_FRONTEND=noninteractive apt-get install -q -y lsb-release" >> do_test
          echo "uname -a" >> do_test
          echo "dpkg --print-architecture" >> do_test
          echo "lsb_release -a" >> do_test
          echo "lscpu" >> do_test
          echo "env python3 -V" >> do_test
          chmod +x do_test
      - name: run my script in docker image
        uses: daniel-mohr/i386_debian_latest@v0
        with:
          cmdfile: ./do_test

  i386_ubuntu-1804:
    # https://github.com/daniel-mohr/i386_ubuntu_1804
    runs-on: ubuntu-latest
    name: ubuntu 18.04 (32 bit)
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: create test script for docker
        run: |
          echo "#!/bin/sh -l" > do_test
          echo "set -e -x" >> do_test
          echo "DEBIAN_FRONTEND=noninteractive apt-get install -q -y lsb-release" >> do_test
          echo "uname -a" >> do_test
          echo "dpkg --print-architecture" >> do_test
          echo "lsb_release -a" >> do_test
          echo "lscpu" >> do_test
          echo "env python3 -V" >> do_test
          chmod +x do_test
      - name: run my script in docker image
        uses: daniel-mohr/i386_ubuntu_1804@v0
        with:
          cmdfile: ./do_test
